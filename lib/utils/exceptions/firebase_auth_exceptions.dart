class TFirebaseAuthException implements Exception {
  final String code;

  TFirebaseAuthException(this.code);

  String get message {
    switch (code) {
      case 'admin-restricted-operation':
        return 'Эта операция ограничена только для администраторов.';
      case 'argument-error':
        return '';
      case 'app-not-authorized':
        return 'Это приложение, идентифицируемое доменом, на котором оно размещено, не авторизовано для использования Firebase Authentication с предоставленным ключом API. Проверьте конфигурацию ключа в консоли Google API.';
      case 'app-not-installed':
        return 'Запрошенное мобильное приложение, соответствующее предоставленному идентификатору (название пакета Android или идентификатор пакета iOS), не установлено на этом устройстве.';
      case 'captcha-check-failed':
        return 'Предоставленный токен проверки reCAPTCHA недействителен, истек, уже использовался или домен, связанный с ним, не соответствует списку разрешенных доменов.';
      case 'code-expired':
        return 'SMS-код истек. Пожалуйста, повторно отправьте код верификации, чтобы попробовать снова.';
      case 'cordova-not-ready':
        return 'Фреймворк Cordova не готов.';
      case 'cors-unsupported':
        return 'Этот браузер не поддерживается.';
      case 'credential-already-in-use':
        return 'Эти учетные данные уже связаны с другим пользовательским аккаунтом.';
      case 'custom-token-mismatch':
        return 'Пользовательский токен соответствует другому аудиторию.';
      case 'requires-recent-login':
        return 'Эта операция чувствительна и требует недавней аутентификации. Пожалуйста, войдите снова перед повторной попыткой этого запроса.';
      case 'dynamic-link-not-activated':
        return 'Пожалуйста, активируйте Dynamic Links в консоли Firebase и примите условия и положения.';
      case 'email-change-needs-verification':
        return 'Пользователи с многофакторной аутентификацией всегда должны иметь подтвержденный адрес электронной почты.';
      case 'email-already-in-use':
        return 'Этот адрес электронной почты уже используется другим аккаунтом.';
      case 'expired-action-code':
        return 'Код действия истек.';
      case 'cancelled-popup-request':
        return 'Эта операция была отменена из-за открытия другого конфликтующего всплывающего окна.';
      case 'internal-error':
        return 'Произошла внутренняя ошибка.';
      case 'invalid-app-credential':
        return 'Запрос на проверку телефона содержит недействительный верификатор приложения. Ответ токена reCAPTCHA либо недействителен, либо истек.';
      case 'invalid-app-id':
        return 'Идентификатор мобильного приложения не зарегистрирован для текущего проекта.';
      case 'invalid-user-token':
        return 'Учетные данные этого пользователя недействительны для этого проекта. Это может произойти, если токен пользователя был подделан или если пользователь не принадлежит проекту, связанному с этим ключом API.';
      case 'invalid-auth-event':
        return 'Произошла внутренняя ошибка.';
      case 'invalid-verification-code':
        return 'Используемый для создания учетных данных аутентификации по телефону код верификации SMS недействителен. Пожалуйста, повторно отправьте SMS с кодом верификации и убедитесь, что вы используете код верификации, предоставленный пользователем.';
      case 'invalid-continue-uri':
        return 'Предоставленный в запросе URL-адрес продолжения недействителен.';
      case 'invalid-cordova-configuration':
        return 'Для включения входа через OAuth необходимо установить следующие плагины Cordova: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser и cordova-plugin-customurlscheme.';
      case 'invalid-custom-token':
        return 'Формат пользовательского токена некорректен. Пожалуйста, проверьте документацию.';
      case 'invalid-dynamic-link-domain':
        return 'Предоставенный домен динамической ссылки не настроен или не авторизован для текущего проекта.';
      case 'invalid-email':
        return 'Адрес электронной почты имеет неверный формат.';
      case 'invalid-api-key':
        return 'Ваш ключ API недействителен, пожалуйста, проверьте, что вы правильно скопировали его.';
      case 'invalid-cert-hash':
        return 'Предоставенная хеш-сумма сертификата SHA-1 недействительна.';
      case 'invalid-credential':
        return 'Предоставленные учетные данные аутентификации некорректны или истекли.';
      case 'invalid-message-payload':
        return 'Шаблон электронной почты, соответствующий этому действию, содержит недопустимые символы в своем сообщении. Пожалуйста, исправьте это, перейдя в раздел шаблонов электронной почты Auth в консоли Firebase.';
      case 'invalid-multi-factor-session':
        return 'Запрос не содержит действительного доказательства успешного входа с первым фактором.';
      case 'invalid-oauth-provider':
        return 'EmailAuthProvider не поддерживается для этой операции. Эта операция поддерживает только поставщиков OAuth.';
      case 'invalid-oauth-client-id':
        return 'Предоставленный идентификатор клиента OAuth недействителен или не соответствует указанному ключу API.';
      case 'unauthorized-domain':
        return 'Этот домен не авторизован для операций OAuth для вашего проекта Firebase. Измените список авторизованных доменов в консоли Firebase.';
      case 'invalid-action-code':
        return 'Код действия недействителен. Это может произойти, если код имеет неверный формат, истек или уже был использован.';
      case 'wrong-password':
        return 'Пароль неверен или у пользователя нет пароля.';
      case 'invalid-persistence-type':
        return 'Указан неверный тип сохранения. Он может быть только локальным, сессионным или отсутствовать.';
      case 'invalid-phone-number':
        return 'Формат предоставленного номера телефона некорректен. Пожалуйста, введите номер телефона в формате, который можно разобрать в формат E.164. Номера телефонов в формате E.164 записываются в формате [+][код страны][номер абонента включая код региона].';
      case 'invalid-provider-id':
        return 'Указанный идентификатор поставщика недействителен.';
      case 'invalid-recipient-email':
        return 'Электронная почта, соответствующая этому действию, не была отправлена, так как предоставленный адрес получателя электронной почты недействителен.';
      case 'invalid-sender':
        return 'Шаблон электронной почты, соответствующий этому действию, содержит недействительный адрес или имя отправителя электронной почты. Пожалуйста, исправьте это, перейдя в раздел шаблонов электронной почты Auth в консоли Firebase.';
      case 'invalid-verification-id':
        return 'Идентификатор верификации, используемый для создания учетных данных аутентификации по телефону, недействителен.';
      case 'invalid-tenant-id':
        return 'Идентификатор арендатора экземпляра Auth недействителен.';
      case 'multi-factor-info-not-found':
        return 'У пользователя нет второго фактора, соответствующего предоставленному идентификатору.';
      case 'multi-factor-auth-required':
        return 'Для завершения входа требуется доказательство владения вторым фактором.';
      case 'missing-android-pkg-name':
        return 'Необходимо указать имя пакета Android, если требуется установка Android-приложения.';
      case 'auth-domain-config-required':
        return 'Убедитесь, что при вызове firebase.initializeApp() указан параметр authDomain, следуя инструкциям в консоли Firebase.';
      case 'missing-app-credential':
        return 'Запрос на проверку телефона не содержит утверждение верификатора приложения. Необходимо предоставить токен ответа reCAPTCHA.';
      case 'missing-verification-code':
        return 'Учетные данные аутентификации по телефону были созданы с пустым кодом верификации SMS.';
      case 'missing-continue-uri':
        return 'Необходимо указать URL-адрес продолжения в запросе.';
      case 'missing-iframe-start':
        return 'Произошла внутренняя ошибка.';
      case 'missing-ios-bundle-id':
        return 'Необходимо указать идентификатор пакета iOS, если указан идентификатор App Store.';
      case 'missing-multi-factor-info':
        return 'Не указан идентификатор второго фактора.';
      case 'missing-multi-factor-session':
        return 'Запрос не содержит доказательства успешного входа с первым фактором.';
      case 'missing-or-invalid-nonce':
        return 'Запрос не содержит действительного nonce. Это может произойти, если SHA-256-хэш предоставленного необработанного nonce не соответствует хэш-значению nonce в полезной нагрузке токена ID.';
      case 'missing-phone-number':
        return 'Чтобы отправлять коды верификации, укажите номер телефона получателя.';
      case 'missing-verification-id':
        return 'Учетные данные аутентификации по телефону были созданы с пустым идентификатором верификации.';
      case 'app-deleted':
        return 'Этот экземпляр FirebaseApp был удален.';
      case 'account-exists-with-different-credential':
        return 'Уже существует учетная запись с тем же адресом электронной почты, но с разными учетными данными для входа. Войдите, используя поставщика, связанный с этим адресом электронной почты.';
      case 'network-request-failed':
        return 'Произошла сетевая ошибка (например, тайм-аут, прерывание соединения или недоступный узел).';
      case 'no-auth-event':
        return 'Произошла внутренняя ошибка.';
      case 'no-such-provider':
        return 'Пользователь не был связан с учетной записью, предоставленного поставщика.';
      case 'null-user':
        return 'В качестве аргумента для операции, требующей ненулевого объекта пользователя, был предоставлен нулевой объект пользователя.';
      case 'operation-not-allowed':
        return 'Указанный поставщик входа отключен для этого проекта Firebase. Включите его в консоли Firebase, на вкладке методы входа в разделе Auth.';
      case 'operation-not-supported-in-this-environment':
        return 'Эта операция не поддерживается в среде, в которой выполняется это приложение. "location.protocol" должен быть http, https или chrome-extension, и веб-хранилище должно быть включено.';
      case 'popup-blocked':
        return 'Не удалось установить соединение с всплывающим окном. Оно может быть заблокировано браузером.';
      case 'popup-closed-by-user':
        return 'Всплывающее окно было закрыто пользователем до завершения операции.';
      case 'provider-already-linked':
        'Пользователь может быть связан только с одной идентичностью для данного поставщика.';
      case 'quota-exceeded':
        return 'Квота проекта для этой операции была превышена.';
      case 'redirect-cancelled-by-user':
        return 'Операция перенаправления была отменена пользователем до завершения.';
      case 'redirect-operation-pending':
        return 'Операция перенаправления для входа уже ожидает завершения.';
      case 'rejected-credential':
        return 'Запрос содержит некорректные или несоответствующие учетные данные.';
      case 'second-factor-already-in-use':
        return 'Второй фактор уже зарегистрирован на этом аккаунте.';
      case 'maximum-second-factor-count-exceeded':
        return 'Превышено максимальное допустимое количество вторых факторов на пользователе.';
      case 'tenant-id-mismatch':
        return 'Предоставленный идентификатор арендатора не соответствует идентификатору арендатора экземпляра Auth.';
      case 'timeout':
        return 'Операция истекла по времени ожидания.';
      case 'user-token-expired':
        return 'Учетные данные пользователя больше не действительны. Пользователь должен войти снова.';
      case 'too-many-requests':
        return 'Все запросы с этого устройства были заблокированы из-за необычной активности. Попробуйте снова позже.';
      case 'unauthorized-continue-uri':
        return 'Домен URL-адреса продолжения не включен в белый список. Пожалуйста, добавьте домен в консоль Firebase.';
      case 'unsupported-first-factor':
        return 'Для регистрации второго фактора или входа с учетной записью с многофакторной аутентификацией требуется вход с поддерживаемым первым фактором.';
      case 'unsupported-persistence-type':
        return 'Текущая среда не поддерживает указанный тип сохранения.';
      case 'unsupported-tenant-operation':
        return 'Эта операция не поддерживается в контексте многоарендатора.';
      case 'unverified-email':
        return 'Операция требует подтвержденного адреса электронной почты.';
      case 'user-cancelled':
        return 'Пользователь не предоставил вашему приложению запрошенные разрешения.';
      case 'user-not-found':
        return 'Не существует записи пользователя, соответствующей этому идентификатору. Пользователь может быть удален.';
      case 'user-disabled':
        return 'Учетная запись пользователя была отключена администратором.';
      case 'user-mismatch':
        return 'Предоставленные учетные данные не соответствуют ранее авторизованному пользователю.';
      case 'user-signed-out':
        return '';
      case 'weak-password':
        return 'Пароль должен быть не менее 6 символов.';
      default:
        return 'Неизвестная ошибка.';
    }
    return message;
  }
}